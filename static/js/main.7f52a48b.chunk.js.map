{"version":3,"sources":["components/App/ContactForm/ContactForm.module.css","components/App/ContactList/ContactListItem/ContactListItem.module.css","components/App/ContactList/ContactList.module.css","components/App/Filter/Filter.module.css","components/App/ContactList/ContactListItem/ContactListItem.js","components/App/ContactList/ContactList.js","components/App/Filter/Filter.js","components/App/ContactForm/ContactForm.js","components/App/App.js","index.js"],"names":["module","exports","ContactListItem","name","number","onRemove","className","styles","ContactList_item","ContactList_button","type","onClick","ContactList","contacts","onRemoveContact","map","id","Filter","value","onChangeFilter","filterEditor_input","onChange","e","target","ContactForm","state","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","FormEditor","onSubmit","this","FormEditor_label","FormEditor_input","FormEditor_button","Component","defaultProps","App","filter","addContact","task","contact","includes","alert","length","uuidv4","prevState","changeFilter","getVisibleContacts","toLowerCase","removeContact","contactId","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f52a48b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormEditor\":\"ContactForm_FormEditor__3o7-R\",\"FormEditor_label\":\"ContactForm_FormEditor_label__1AX6R\",\"FormEditor_input\":\"ContactForm_FormEditor_input__1i_Lu\",\"FormEditor_button\":\"ContactForm_FormEditor_button__1Qz8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList_item\":\"ContactListItem_ContactList_item__MOnyP\",\"ContactList_button\":\"ContactListItem_ContactList_button__2B_LI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2nNzh\",\"TaskList_item\":\"ContactList_TaskList_item__3wB7C\",\"completed\":\"ContactList_completed__rQL_2\",\"TaskList_text\":\"ContactList_TaskList_text__3ok4_\",\"TaskList_actions\":\"ContactList_TaskList_actions__3JcCN\",\"TaskList_button\":\"ContactList_TaskList_button__pvw6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterEditor_input\":\"Filter_filterEditor_input__3t60n\"};","import React from \"react\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n  <li className={styles.ContactList_item}>\r\n    {name + \":\" + number}\r\n    {\r\n      <button\r\n        className={styles.ContactList_button}\r\n        type=\"button\"\r\n        name=\"delete\"\r\n        onClick={onRemove}\r\n      >\r\n        Delete\r\n      </button>\r\n    }\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.ContactList}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        name={name}\r\n        number={number}\r\n        onRemove={() => onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        className={styles.filterEditor_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={(e) => onChangeFilter(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  render() {\r\n    return (\r\n      <form className={styles.FormEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormEditor_label}>\r\n          Name\r\n          <input\r\n            className={styles.FormEditor_input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.FormEditor_label}>\r\n          Number\r\n          <input\r\n            className={styles.FormEditor_input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.FormEditor_button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.defaultProps = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem(\"contacts\");\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (task) => {\n    const searchSameName = this.state.contacts\n      .map((contact) => contact.name)\n      .includes(task.name);\n\n    if (searchSameName) {\n      alert(`${task.name} is already in contacts`);\n    } else if (task.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...task,\n        id: uuidv4(),\n      };\n\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    }\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        {visibleContacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onRemoveContact={this.removeContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './base.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}